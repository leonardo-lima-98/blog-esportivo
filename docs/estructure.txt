blog-esportivo/
├── backend/
│   │
│   ├── admin/                  # Scripts administrativos
│   │   ├── __init__.py
│   │   ├── run.py              # Script principal para execução
│   │   ├── etl/
│   │   │   ├── __init__.py
│   │   │   ├── process.py      # Processamento de dados
│   │   │   └── transform.py    # Transformação de dados
│   │   ├── scraping/
│   │   │   ├── __init__.py
│   │   │   ├── teams.py        # Scraping de times
│   │   │   └── news.py         # Scraping de notícias
│   │   └── utils/
│   │       ├── __init__.py
│   │       └── helpers.py      # Funções auxiliares
│   │
│   ├── alembic/                # Migrações de banco de dados
│   │   ├── versions/
│   │   ├── env.py
│   │   └── alembic.ini
│   │
│   ├── app/                    # Aplicação FastAPI pública
│   │   ├── api/
│   │   │   ├── __init__.py
│   │   │   └── routes/
│   │   │       ├── __init__.py
│   │   │       ├── news.py
│   │   │       ├── teams.py
│   │   │       └── users.py
│   │   ├── core/
│   │   │   ├── __init__.py
│   │   │   ├── config.py       # Configurações da aplicação
│   │   │   └── security.py     # Funções de segurança (JWT, etc)
│   │   ├── db/
│   │   │   ├── __init__.py
│   │   │   ├── base.py         # Base de dados
│   │   │   └── session.py      # Funções de sessão da DB
│   │   ├── models/             # Modelos SQLAlchemy
│   │   │   ├── __init__.py
│   │   │   ├── news.py
│   │   │   ├── teams.py
│   │   │   └── users.py
│   │   ├── schemas/            # Esquemas Pydantic
│   │   │   ├── __init__.py
│   │   │   ├── news.py
│   │   │   ├── teams.py
│   │   │   └── users.py
│   │   ├── utils/              # Utilitários gerais
│   │   │   ├── __init__.py
│   │   │   └── helpers.py
│   │   ├── __init__.py
│   │   └── main.py             # Ponto de entrada da API FastAPI
│   │
│   ├── tests/                  # Testes
│   │   ├── __init__.py
│   │   ├── conftest.py
│   │   ├── test_api/
│   │   └── test_admin/
│   │
│   ├── requirements.txt        # Dependências do backend
│   ├── requirements-dev.txt    # Dependências de desenvolvimento
│   └── pyproject.toml          # Configuração do projeto Python
│
├── frontend/
│   ├── public/
│   │   ├── index.html
│   │   ├── favicon.ico
│   │   └── assets/
│   │       └── images/
│   │
│   ├── src/
│   │   ├── api/                # Clientes da API
│   │   │   ├── index.js
│   │   │   ├── teams.js
│   │   │   └── news.js
│   │   ├── components/         # Componentes React reutilizáveis
│   │   │   ├── common/
│   │   │   ├── layout/
│   │   │   └── ui/
│   │   ├── hooks/              # Hooks personalizados
│   │   ├── pages/              # Componentes de página
│   │   │   ├── Home.jsx
│   │   │   ├── News.jsx
│   │   │   └── Teams.jsx
│   │   ├── store/              # Gerenciamento de estado (Redux/Zustand)
│   │   ├── styles/             # Estilos CSS/SCSS
│   │   ├── utils/              # Utilitários frontend
│   │   ├── App.jsx             # Componente raiz da aplicação
│   │   └── main.jsx            # Ponto de entrada React
│   │
│   ├── package.json
│   ├── vite.config.js          # Configuração do Vite
│   ├── .eslintrc.js
│   └── tsconfig.json           # Se usando TypeScript
│
├── docker/
│   ├── backend/
│   │   ├── Dockerfile
│   │   └── entrypoint.sh
│   ├── frontend/
│   │   └── Dockerfile
│   ├── nginx/
│   │   ├── Dockerfile
│   │   └── nginx.conf
│   └── postgres/
│       ├── Dockerfile          # Opcional, pode usar imagem oficial
│       └── init.sql            # Script de inicialização do DB
│
├── docker-compose.yml          # Configuração dos serviços
├── docker-compose.dev.yml      # Configuração para desenvolvimento
├── .env.example                # Exemplo de variáveis de ambiente
├── .gitignore
└── README.md